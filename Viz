import xgboost as xgb

# Load or prepare your dataset
# ...

# Train an XGBoost classifier on your dataset
model = xgb.XGBClassifier()
model.fit(X_train, y_train)

# Get the trees as a DataFrame
trees_df = model.get_booster().trees_to_dataframe()

# Sort the DataFrame by "Gain" in descending order
trees_df = trees_df.sort_values(by="Gain", ascending=False)

# Text representation of the classification path and most impactful features
explanation_text = "Classification Path and Most Impactful Features:\n"
for _, row in trees_df.iterrows():
    feature_name = X_train.columns[row["Feature"]]
    threshold_value = row["Split"]
    direction = "True" if row["Yes"] == -1 else "False"
    explanation_text += f"Feature: {feature_name}, Threshold: {threshold_value:.2f}, Direction: {direction}\n"

print(explanation_text)
